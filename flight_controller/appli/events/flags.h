/*
 * flags.h
 *
 *  Created on: 16 sept. 2020
 *      Author: Theo
 */

#ifndef EVENTS_FLAGS_H_
#define EVENTS_FLAGS_H_

typedef enum{
	//Flags pour les channels
	FLAG_CHAN_5_POS_1,
	FLAG_CHAN_5_POS_3,

	FLAG_CHAN_6_POS_1,
	FLAG_CHAN_6_POS_2,
	FLAG_CHAN_6_POS_3,

	FLAG_CHAN_7_POS_1,
	FLAG_CHAN_7_POS_2,
	FLAG_CHAN_7_POS_3,

	FLAG_CHAN_8_POS_1,
	FLAG_CHAN_8_POS_3,

	FLAG_CHAN_9_PUSH,
	FLAG_CHAN_9_ON,
	FLAG_CHAN_9_OFF,

	FLAG_CHAN_10_PUSH,
	FLAG_CHAN_10_ON,
	FLAG_CHAN_10_OFF,

	FLAG_THROTTLE_HIGH,
	FLAG_THROTTLE_LOW,
	FLAG_THROTTLE_NULL,

	//Flags high lvl states
	FLAG_REQUEST_MPU_CALIBRATION,
	FLAG_REQUEST_MANUAL_PC,
	FLAG_REQUEST_MANUAL,
	FLAG_REQUEST_MANUAL_ACCRO,
	FLAG_REQUEST_MANUAL_HAND,
	FLAG_REQUEST_STOP_MOTORS,

	//Flags subs
	FLAG_SUB_PARACHUTE_OVER,

	//Flags état périphérique
	FLAG_IMU_FAIL,
	FLAG_IMU_DONE_CALIB,
	FLAG_TIMEOUT_PPM,
	FLAG_PPM_OK,

	//Flag batterie
	FLAG_BATTERY_LOW_CUTOF,
	FLAG_BATTERY_LOW,
	FLAG_BATTERY_MEDIUM,
	FLAG_BATTERY_HIGH,
	FLAG_BATTERY_NO_BATT,

	//Flags pour l'état de la high lvl
	FLAG_STATE_ON_THE_GROUND,
	FLAG_STATE_MANUAL,
	FLAG_STATE_MANUAL_PC,
	FLAG_STATE_MANUAL_HAND_CONTROL,
	FLAG_STATE_MANUAL_ACCRO,
	FLAG_STATE_PARACHUTE,
	FLAG_STATE_CALIBRATE_MPU,
	FLAG_STATE_ERROR_SENSOR,
	FLAG_STATE_CHANGE_PID_SETTINGS,

	FLAG_COUNT
}Flags_t;


#endif /* EVENTS_FLAGS_H_ */
